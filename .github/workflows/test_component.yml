name: Test nf-neuro component

on:
  workflow_dispatch:
    inputs:
      paths:
        description: "Paths nf-test should look into for component's tests"
        required: true
        type: string
      profile:
        description: "Which profile to use to run the component's tests"
        default: "docker"
        type: choice
        options:
          - docker
          - singularity
      runner:
        description: "Runner label to use for the test run"
        default: "ubuntu-latest"
        type: string
      nextflow_version:
        description: "Nextflow version to use"
        required: false
        type: string
        default: "24.04.4"
      nf_test_version:
        description: "nf-test version to use"
        required: false
        type: string
        default: "0.9.0"
  workflow_call:
    inputs:
      paths:
        description: "Paths nf-test should look into for component's tests"
        required: true
        type: string
      profile:
        description: |
          Which profile to use to run the component's tests, either :
            - docker
            - singularity
        default: "docker"
        type: string
      runner:
        description: "Runner label to use for the test run"
        default: "ubuntu-latest"
        type: string
      nextflow_version:
        description: "Nextflow version to use"
        required: false
        type: string
        default: "24.04.4"
      nf_test_version:
        description: "nf-test version to use"
        required: false
        type: string
        default: "0.9.0"

env:
  NXF_SINGULARITY_CACHEDIR: /home/runner/.singularity_cache/.singularity
  NXF_SINGULARITY_LIBRARYDIR: ${{ github.workspace }}/.singularity

run-name: Run nf-test on ${{ inputs.paths }}
jobs:
  nf-test:
    runs-on: ${{ inputs.runner }}
    name: test - ${{ inputs.paths }}
    if: inputs.paths != '' && inputs.profile != ''
    env:
      NXF_ANSI_LOG: false
      NXF_DISABLE_CHECK_LATEST: true
      NFTEST_VERSION: "${{ inputs.nf_test_version }}"
      # nf-test directories need to be placed on an ephemeral disk accessible to docker.
      # In our case, it's only the _work workspace for security reasons
      NXF_WORKDIR: /home/runner/_work
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: "3.11"
          cache: "pip"
      - uses: actions/setup-java@2dfa2011c5b2a0f1489bf9e433881c92c1631f88 # v4.3.0
        with:
          distribution: "temurin"
          java-version: "17"
      - uses: nf-core/setup-nextflow@561fcfc7146dcb12e3871909b635ab092a781f34 # v2.0.0
        with:
          version: ${{ inputs.nextflow_version }}
      - uses: AlexVCaron/setup-nf-test@2c5a31b90b34d97abf155b57ee0f79c7f5aa118a
        # Used to make the action executable on our runners. Related to how the home
        # and work directories are set up from ephemeral disks. See nf-core/setup-nf-test/issues/6
        with:
          version: ${{ inputs.nf_test_version }}

      - name: Install Python dependencies
        run: python -m pip install --upgrade pip pdiff cryptography

      - name: Fix nf-test launching jvm with too much memory
        run: |
          sed -i 's/-Xmx10g/-Xmx4G/' $(which nf-test)

      - name: Compute test run UID
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: test-run-identifier
        with:
          script: |
            identifier='${{ inputs.paths }}'.toLowerCase().replaceAll(/[/. ]+/g, '-').trim('-');
            core.setOutput('uid', identifier);

      - name: Cache test archives under test UID
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ${{ env.NXF_WORKDIR }}/nf-neuro-test-archives
          key: |
            nf-neuro-test-data-cache-${{ steps.test-run-identifier.outputs.uid }}
            nf-neuro-test-data-cache-

      - name: Run nf-test
        env:
          NFT_DIFF: "pdiff"
          NFT_DIFF_ARGS: "--line-numbers --width 120 --expand-tabs=2"
          TMPDIR: ${{ env.NXF_WORKDIR }}/tmpdir
          NFT_WORKDIR: ${{ env.NXF_WORKDIR }}/.nf-test
          NXF_CACHE_DIR: ${{ env.NXF_WORKDIR }}/.nextflow
          NXF_TEMP: ${{ env.NXF_WORKDIR }}/tmpdir
          NFNEURO_TEST_DATA_HOME: ${{ env.NXF_WORKDIR }}
        run: |
          # use "docker_self_hosted" if it runs on self-hosted runner and inputs.profile=docker
          if [ "${{ inputs.profile }}" == "docker" ]; then
            PROFILE="docker_self_hosted"
          else
            PROFILE=${{ inputs.profile }}
          fi

          mkdir -p ${{ env.TMPDIR }}
          nf-test test \
            --profile=$PROFILE \
            --tap=test.tap \
            --verbose \
            --debug \
            ${{ inputs.paths }}

      - uses: pcolby/tap-summary@0959cbe1d4422e62afc65778cdaea6716c41d936 # v1.1.1
        with:
          path: >-
            test.tap

      - name: Tests logs
        if: failure()
        run: |
          shopt -s globstar
          for f in ${{ env.NXF_WORKDIR }}/.nf-test/tests/**/work/**/.command.log
          do
            echo "$(sed '3q;d' $(dirname $f)/.command.run)"
            cat $f
          done

      - name: Collect test reports
        if: always()
        run: |
          mkdir -p tests_reports
          i=1
          for t in ${{ env.NXF_WORKDIR }}/.nf-test/tests/*
          do
            tag=$(cat $t/meta/mock.nf | grep -E 'include \{.*' | tail -1 | cut -d' ' -f3)_$i
            cp $t/report.html tests_reports/${tag}.html
            i=$((i+1))
          done

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: reports-${{ steps.test-run-identifier.outputs.uid }}
          path: tests_reports/
          overwrite: true
          retention-days: 1
          compression-level: 9

      - name: Collect test working directories
        if: failure()
        run: |
          mkdir -p tests_workdir
          for t in ${{ env.NXF_WORKDIR }}/.nf-test/tests/**/work/**/.command.log
          do
            tag=$(sed -n '3p' $(dirname $t)/.command.run | cut -d' ' -f3 | tr -d "'")
            cp -R $(dirname $t) tests_workdir/$tag
          done

      - name: Upload test working directories
        if: failure()
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: tests-workdir-${{ steps.test-run-identifier.outputs.uid }}
          path: tests_workdir/
          overwrite: true
          retention-days: 1
          compression-level: 9
          include-hidden-files: true

      - name: Clean up
        if: always()
        run: |
          sudo rm -rf ${{ env.NXF_WORKDIR }}/.nf-test
