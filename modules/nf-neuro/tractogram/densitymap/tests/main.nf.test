nextflow_process {

    name "Test Process TRACTOGRAM_DENSITYMAP"
    script "../main.nf"
    process "TRACTOGRAM_DENSITYMAP"

    tag "modules"
    tag "modules_nfcore"
    tag "tractogram"
    tag "tractogram/densitymap"

    tag "subworkflows"
    tag "subworkflows/load_test_data"

    setup {
        run("LOAD_TEST_DATA", alias: "LOAD_DATA") {
            script "../../../../../subworkflows/nf-neuro/load_test_data/main.nf"
            process {
                """
                input[0] = Channel.from( [ "bundles.zip" ] )
                input[1] = "test.load-test-data"
                """
            }
        }
    }

    test("densitymap - map") {

        when {
            process {
                """
                input[0] = LOAD_DATA.out.test_data_directory.map{
                    test_data_directory -> [
                        [ id:'test', single_end:false ], // meta map
                        file("\${test_data_directory}/bundle_all_1mm.trk")
                    ]
                }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("densitymap - mask") {

        config "./nextflow_mask.config"

        when {
            process {
                """
                input[0] = LOAD_DATA.out.test_data_directory.map{
                    test_data_directory -> [
                        [ id:'test', single_end:false ], // meta map
                        file("\${test_data_directory}/bundle_all_1mm.trk")
                    ]
                }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
